if (( ! $+commands[fzf] )); then
	# exit if this system doesn't have fzf
	return
fi

# Setup fzf ############################################################

if [[ -z "$FZF_DEFAULT_OPTS" ]]; then
	export FZF_DEFAULT_OPTS=--no-color
fi

# Auto-completion ######################################################

export FZF_PATH=`echo $(which fzf)(:A:h:h)`
[[ $- =~ i ]] && source $FZF_PATH/fzf-completion.zsh

# Key bindings #########################################################

__fsel() {
	set -o nonomatch
	command find * -path '*/\.*' -prune \
		-o -type f -print \
		-o -type d -print \
		-o -type l -print 2> /dev/null | fzf -m | while read item; do
			printf '%q ' "$item"
		done
	echo
}

if [[ $- =~ i ]]; then
	if [ -n "$TMUX_PANE" -a ${FZF_TMUX:-1} -ne 0 -a ${LINES:-40} -gt 15 ]; then
		this=$0

		fzf-file-widget() {
			local height
			height=${FZF_TMUX_HEIGHT:-40%}
			if [[ $height =~ %$ ]]; then
				height="-p ${height%\%}"
			else
				height="-l $height"
			fi
			tmux split-window $height "zsh -c 'source $this; tmux send-keys -t $TMUX_PANE \"\$(__fsel)\"'"
		}
	else
		fzf-file-widget() {
			LBUFFER="${LBUFFER}$(__fsel)"
			zle redisplay
		}
	fi

	# CTRL-P - Paste the selected file path(s) into the command line
	zle -N fzf-file-widget
	bindkey '^P' fzf-file-widget

	fzf-cd-widget() {
		cd "${$(set -o nonomatch; command find -L * -path '*/\.*' -prune \
			-o -type d -print 2> /dev/null | fzf):-.}"
		zle reset-prompt
	}

	# ALT-C - cd into the selected directory
	zle -N fzf-cd-widget
	bindkey '\ec' fzf-cd-widget

	fzf-history-widget() {
		LBUFFER=$(fc -l 1 | fzf +s +m -n2..,.. | sed "s/ *[0-9*]* *//")
		zle redisplay
	}

	# CTRL-R - Paste the selected command from history into the command line
	zle -N fzf-history-widget
	bindkey '^R' fzf-history-widget
fi

# Useful functions #####################################################

function fkill() {
	pid=$(ps -ef | sed 1d | fzf -e -m | awk '{print $2}')
	if [ -n "$pid" ]; then
		kill -${1:-TERM} $pid
	fi
}

function fvi() {
	file=$(fzf)
	if [ -n "$file" ]; then
		vi $file
	fi
}

# vim:filetype=zsh:shiftwidth=4:tabstop=4:noexpandtab:foldmethod=marker
