#!/usr/bin/env python3

from sys import argv, executable
from os import environ
import asyncio
import iterm2


async def run_applescript(script):
    proc = await asyncio.create_subprocess_exec(
        "osascript", "-", stdout=asyncio.subprocess.PIPE, stdin=asyncio.subprocess.PIPE
    )
    await proc.communicate(script.encode())


async def set_term_theme(theme):
    light_theme = "solarized-light"
    dark_theme = "ashes"
    name = dark_theme if theme == "dark" else light_theme
    proc = await asyncio.create_subprocess_shell("""zsh -ic base16_%s""" % name)
    await proc.wait()


async def set_dark_mode(theme):
    await run_applescript(
        """tell application "System Events"
      tell appearance preferences
	    set dark mode to %s
	  end tell
    end tell"""
        % ("true" if theme == "dark" else "false")
    )


async def set_alfred_theme(theme):
    if theme == "dark":
        name = "Minimal Dark"
    else:
        name = "Minimal"
    await run_applescript('''tell application "Alfred 4" to set theme "%s"''' % name)


async def main():
    theme = argv[1]

    with open("%s/theme" % environ["CACHEDIR"], mode="w") as f:
        f.write("%s\n" % theme)

    # Set the system dark mode first, otherwise app-level changes don't always
    # take
    await asyncio.gather(set_dark_mode(theme), set_term_theme(theme))

    await set_alfred_theme(theme)


asyncio.get_event_loop().run_until_complete(main())
