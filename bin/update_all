#!/bin/bash

printf ">> Updating homebrew apps...\n"
brew update && brew upgrade && brew cleanup

if type pip3 > /dev/null 2>&1; then
	printf ">> Updating python3 packages...\n"
	pip3 install -U pip setuptools neovim > /dev/null
fi

if type pip2 > /dev/null 2>&1; then
	printf ">> Updating python2 packages...\n"
	pip2 install -U pip setuptools neovim > /dev/null
fi

if type npm > /dev/null 2>&1; then
	printf ">> Updating global npm modules...\n"
	npm update -g
fi

if [[ -n $TMUX_PLUGIN_MANAGER_PATH ]]; then
	printf ">> Updating tmux plugins...\n"
	cd $TMUX_PLUGIN_MANAGER_PATH
	for plugin in *; do
		cd $plugin 
		head=$(git rev-parse HEAD)
		git pull -q --recurse-submodules
		git submodule update
		if [[ $(git rev-parse HEAD) != $head ]]; then 
			printf "   $plugin\n"
		fi
		cd ..
	done
fi

if [[ -a $HOME/.vim/autoload/plug.vim ]]; then
	printf ">> Updating vim-plug...\n"
	cd $HOME/.vim/autoload
	existing=$(<plug.vim)
	current=$(curl -s https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim)
	if [[ "$existing" != "$current" ]]; then
		mv plug.vim plug.old
		echo "$current" > plug.vim
		printf "   updated\n"
	fi

	printf ">> Updating vim plugins...\n"
	cd $HOME/.vim/plugged
	for plugin in *; do
		cd $plugin 
		head_name=$(git symbolic-ref HEAD --short)
		if [[ $head_name != "master" ]]; then
			printf "   skipping $plugin (not on master)\n";
		else
			head=$(git rev-parse HEAD)
			git pull -q --recurse-submodules
			if [[ "$?" != "0" ]]; then 
				printf "   problem updating $plugin\n"
			else
				git submodule update
				if [[ $(git rev-parse HEAD) != $head ]]; then 
					printf "   $plugin\n"
				fi
			fi
		fi
		cd ..
	done
fi

if [[ -a $HOME/.dotfiles/zsh/zsh-nvm ]]; then
	printf ">> Updating zsh-nvm...\n"
	cd $HOME/.dotfiles/zsh/zsh-nvm
	git pull -q
	if [[ "$?" != "0" ]]; then 
		printf "   problem updating zsh-nvm\n"
	fi
fi

printf ">> Done\n"
