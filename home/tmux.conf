##########################################
# STATUS BAR

# Enable UTF8 support in the status bar
set -g status-utf8 on

# Update the status bar every few seconds
set -g status-interval 5

# <host> .... <windows> .... <info>
set -g status-left ' #h '
set -g window-status-format ' #W '
set -g window-status-current-format ' #W '
set -g status-right '%m/%d | %H:%M'

##########################################
# TERMINAL EMULATOR TITLES
set -g set-titles on
set -g set-titles-string "#(tmux ls | awk -F: '{print $1}' | xargs | sed 's/\ / | /g')"

##########################################
# BASIC CONFIG

# Tell tmux to expect UTF8 characters
set -g utf8 on

# Don't let apps chnage the window name
set -g allow-rename off

# Make the scrollback buffer huge
set -g history-limit 50000

# Make the repeat time a bit longer; this works best when the repeating command
# involves CTRL so that releasing CTRL ends the repetition
set -g repeat-time 1000

# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and
# setting overrides of C-Up, C-Down, C-Left, C-Right
set -g terminal-overrides 'xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC'

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer
# access
set -s escape-time 50

# Keep transient things around longer
set -g display-time 4000
set -g display-panes-time 4000

##########################################
# KEY BINDINGS

# Vi bindings for everything
set -g status-keys vi
set -g mode-keys vi

# Change the prefix to C-s
unbind-key C-b
set -g prefix C-s

unbind %
unbind '"'

bind s send-prefix
bind t choose-tree

# Reload the config
bind C-r run -b ' \
  tmux source-file ~/.tmux.conf > /dev/null; \
  tmux display-message "Sourced .tmux.conf!"'

# Copy and paste
bind p paste-buffer
bind c copy-mode
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"

# Redraw the window
bind r refresh-client

# Basic navigation
bind e choose-window
bind -r { select-window -t :-
bind -r [ select-window -t :-
bind -r } select-window -t :+
bind -r ] select-window -t :+

# Pane splitting
bind "|" split-window -h -c "#{pane_current_path}"
bind "-" split-window -v -c "#{pane_current_path}"
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -r Space next-layout

# Window movement
bind -r "<" swap-window -t -1
bind -r ">" swap-window -t +1

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Create new windows (like Cmd-T to create new tabs)
bind -n C-t new-window -a -c "#{pane_current_path}"

# Mouse mode
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Load tmux plugins
set-environment -g TMUX_PLUGIN_MANAGER_PATH "$DOTFILES/tmux/plugins/"
set -g status-right "#{battery_icon} #{battery_percentage} | %m/%d | %H:%M"
set -g @batt_discharging_icon "▽"
set -g @batt_charged_icon " "
set -g @batt_charging_icon "△"
set -g @resurrect-restore "R"
set -g @resurrect-save "S"
set -g @resurrect-processes '~/usr/local/bin/static ~"java -jar /usr/local/Cellar/selenium-server-standalone"'
set -g @resurrect-dir "$CACHEDIR/tmux/resurrect"

set -g @tpm_plugins "              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-open           \
  tmux-plugins/tmux-battery        \
  tmux-plugins/tmux-resurrect      \
"

run $DOTFILES/tmux/plugins/tpm/tpm

# Use pbpaste on OSX
if "[[ $OSTYPE == darwin* ]]" "bind p run 'pbpaste | tmux load-buffer - && tmux paste-buffer'" ""

# Use a fancy screen terminal if we're using a fancy xterm
if "[[ $TERM == xterm-256color ]]" "set -g default-terminal 'screen-256color'" ""
if "[[ $TERM == xterm-256color-italic ]]" "set -g default-terminal 'screen-256color-italic'" ""

##########################################
# Theme

if "[ $(cat $CACHEDIR/termbg) == 'light' ]" "source $DOTFILES/tmux/light.conf" "source $DOTFILES/tmux/dark.conf"
